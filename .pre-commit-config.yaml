# Pre-commit configuration for code quality and consistency
# Install: pip install pre-commit
# Setup: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Basic file fixes
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: name-tests-test
        args: ['--pytest-test-first']
      - id: requirements-txt-fixer

  # Ruff - Fast Python linter (replaces flake8, pylint, etc.)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi, jupyter]

  # Black - Code formatter
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.10
        types_or: [python, pyi]

  # isort - Import sorter
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]

  # mypy - Static type checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-PyYAML
          - types-tqdm
          - numpy
          - torch
        args: [--config-file=pyproject.toml]
        pass_filenames: true
        exclude: ^(tests/|docs/|scripts/)

  # docformatter - Format docstrings
  - repo: https://github.com/PyCQA/docformatter
    rev: v1.7.5
    hooks:
      - id: docformatter
        args: [
          --in-place,
          --wrap-summaries=100,
          --wrap-descriptions=100,
          --blank,
        ]

  # pydocstyle - Docstring style checker
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        exclude: ^(tests/|docs/|scripts/|setup.py)
        additional_dependencies: ["toml"]

  # bandit - Security linter
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ["-ll", "--skip", "B101,B601,B602,B607"]
        exclude: ^tests/

  # prettier - Format YAML, JSON, Markdown
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [yaml, json, markdown]
        exclude: ^(.*\.md|docs/)

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(poetry.lock|package-lock.json|.*\.ipynb)$

# Global exclude patterns
exclude: |
  (?x)^(
    .*\.egg-info/|
    \.git/|
    \.mypy_cache/|
    \.pytest_cache/|
    \.tox/|
    \.venv/|
    _build/|
    build/|
    dist/|
    htmlcov/|
    node_modules/|
    __pycache__/|
    .*\.pyc|
    .*\.pyo|
    .*\.swp|
    .*\.bak|
    .*~
  )

# Configuration
default_language_version:
  python: python3.10

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy]  # mypy requires project dependencies